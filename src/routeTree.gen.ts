/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as JoinRouteImport } from './routes/join'
import { Route as CreateRouteImport } from './routes/create'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AdminLoginRouteImport } from './routes/admin/login'
import { Route as AdminAuthenticatedRouteImport } from './routes/admin/_authenticated'
import { Route as GamesCodeRouteRouteImport } from './routes/games/$code/route'
import { Route as GamesCodeSummaryRouteImport } from './routes/games/$code/summary'
import { Route as GamesCodePlayRouteImport } from './routes/games/$code/play'
import { Route as GamesCodeLobbyRouteImport } from './routes/games/$code/lobby'
import { Route as AdminAuthenticatedQuestionsRouteImport } from './routes/admin/_authenticated/questions'
import { Route as AdminAuthenticatedGameRoomsRouteImport } from './routes/admin/_authenticated/game-rooms'
import { Route as AdminAuthenticatedFeedbackRouteImport } from './routes/admin/_authenticated/feedback'
import { Route as AdminAuthenticatedDashboardRouteImport } from './routes/admin/_authenticated/dashboard'

const AdminRouteImport = createFileRoute('/admin')()

const AdminRoute = AdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const JoinRoute = JoinRouteImport.update({
  id: '/join',
  path: '/join',
  getParentRoute: () => rootRouteImport,
} as any)
const CreateRoute = CreateRouteImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminLoginRoute = AdminLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AdminRoute,
} as any)
const AdminAuthenticatedRoute = AdminAuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => AdminRoute,
} as any)
const GamesCodeRouteRoute = GamesCodeRouteRouteImport.update({
  id: '/games/$code',
  path: '/games/$code',
  getParentRoute: () => rootRouteImport,
} as any)
const GamesCodeSummaryRoute = GamesCodeSummaryRouteImport.update({
  id: '/summary',
  path: '/summary',
  getParentRoute: () => GamesCodeRouteRoute,
} as any)
const GamesCodePlayRoute = GamesCodePlayRouteImport.update({
  id: '/play',
  path: '/play',
  getParentRoute: () => GamesCodeRouteRoute,
} as any)
const GamesCodeLobbyRoute = GamesCodeLobbyRouteImport.update({
  id: '/lobby',
  path: '/lobby',
  getParentRoute: () => GamesCodeRouteRoute,
} as any)
const AdminAuthenticatedQuestionsRoute =
  AdminAuthenticatedQuestionsRouteImport.update({
    id: '/questions',
    path: '/questions',
    getParentRoute: () => AdminAuthenticatedRoute,
  } as any)
const AdminAuthenticatedGameRoomsRoute =
  AdminAuthenticatedGameRoomsRouteImport.update({
    id: '/game-rooms',
    path: '/game-rooms',
    getParentRoute: () => AdminAuthenticatedRoute,
  } as any)
const AdminAuthenticatedFeedbackRoute =
  AdminAuthenticatedFeedbackRouteImport.update({
    id: '/feedback',
    path: '/feedback',
    getParentRoute: () => AdminAuthenticatedRoute,
  } as any)
const AdminAuthenticatedDashboardRoute =
  AdminAuthenticatedDashboardRouteImport.update({
    id: '/dashboard',
    path: '/dashboard',
    getParentRoute: () => AdminAuthenticatedRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/create': typeof CreateRoute
  '/join': typeof JoinRoute
  '/games/$code': typeof GamesCodeRouteRouteWithChildren
  '/admin': typeof AdminAuthenticatedRouteWithChildren
  '/admin/login': typeof AdminLoginRoute
  '/admin/dashboard': typeof AdminAuthenticatedDashboardRoute
  '/admin/feedback': typeof AdminAuthenticatedFeedbackRoute
  '/admin/game-rooms': typeof AdminAuthenticatedGameRoomsRoute
  '/admin/questions': typeof AdminAuthenticatedQuestionsRoute
  '/games/$code/lobby': typeof GamesCodeLobbyRoute
  '/games/$code/play': typeof GamesCodePlayRoute
  '/games/$code/summary': typeof GamesCodeSummaryRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/create': typeof CreateRoute
  '/join': typeof JoinRoute
  '/games/$code': typeof GamesCodeRouteRouteWithChildren
  '/admin': typeof AdminAuthenticatedRouteWithChildren
  '/admin/login': typeof AdminLoginRoute
  '/admin/dashboard': typeof AdminAuthenticatedDashboardRoute
  '/admin/feedback': typeof AdminAuthenticatedFeedbackRoute
  '/admin/game-rooms': typeof AdminAuthenticatedGameRoomsRoute
  '/admin/questions': typeof AdminAuthenticatedQuestionsRoute
  '/games/$code/lobby': typeof GamesCodeLobbyRoute
  '/games/$code/play': typeof GamesCodePlayRoute
  '/games/$code/summary': typeof GamesCodeSummaryRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/create': typeof CreateRoute
  '/join': typeof JoinRoute
  '/games/$code': typeof GamesCodeRouteRouteWithChildren
  '/admin': typeof AdminRouteWithChildren
  '/admin/_authenticated': typeof AdminAuthenticatedRouteWithChildren
  '/admin/login': typeof AdminLoginRoute
  '/admin/_authenticated/dashboard': typeof AdminAuthenticatedDashboardRoute
  '/admin/_authenticated/feedback': typeof AdminAuthenticatedFeedbackRoute
  '/admin/_authenticated/game-rooms': typeof AdminAuthenticatedGameRoomsRoute
  '/admin/_authenticated/questions': typeof AdminAuthenticatedQuestionsRoute
  '/games/$code/lobby': typeof GamesCodeLobbyRoute
  '/games/$code/play': typeof GamesCodePlayRoute
  '/games/$code/summary': typeof GamesCodeSummaryRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/create'
    | '/join'
    | '/games/$code'
    | '/admin'
    | '/admin/login'
    | '/admin/dashboard'
    | '/admin/feedback'
    | '/admin/game-rooms'
    | '/admin/questions'
    | '/games/$code/lobby'
    | '/games/$code/play'
    | '/games/$code/summary'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/create'
    | '/join'
    | '/games/$code'
    | '/admin'
    | '/admin/login'
    | '/admin/dashboard'
    | '/admin/feedback'
    | '/admin/game-rooms'
    | '/admin/questions'
    | '/games/$code/lobby'
    | '/games/$code/play'
    | '/games/$code/summary'
  id:
    | '__root__'
    | '/'
    | '/create'
    | '/join'
    | '/games/$code'
    | '/admin'
    | '/admin/_authenticated'
    | '/admin/login'
    | '/admin/_authenticated/dashboard'
    | '/admin/_authenticated/feedback'
    | '/admin/_authenticated/game-rooms'
    | '/admin/_authenticated/questions'
    | '/games/$code/lobby'
    | '/games/$code/play'
    | '/games/$code/summary'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CreateRoute: typeof CreateRoute
  JoinRoute: typeof JoinRoute
  GamesCodeRouteRoute: typeof GamesCodeRouteRouteWithChildren
  AdminRoute: typeof AdminRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/join': {
      id: '/join'
      path: '/join'
      fullPath: '/join'
      preLoaderRoute: typeof JoinRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/create': {
      id: '/create'
      path: '/create'
      fullPath: '/create'
      preLoaderRoute: typeof CreateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/login': {
      id: '/admin/login'
      path: '/login'
      fullPath: '/admin/login'
      preLoaderRoute: typeof AdminLoginRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/_authenticated': {
      id: '/admin/_authenticated'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminAuthenticatedRouteImport
      parentRoute: typeof AdminRoute
    }
    '/games/$code': {
      id: '/games/$code'
      path: '/games/$code'
      fullPath: '/games/$code'
      preLoaderRoute: typeof GamesCodeRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/games/$code/summary': {
      id: '/games/$code/summary'
      path: '/summary'
      fullPath: '/games/$code/summary'
      preLoaderRoute: typeof GamesCodeSummaryRouteImport
      parentRoute: typeof GamesCodeRouteRoute
    }
    '/games/$code/play': {
      id: '/games/$code/play'
      path: '/play'
      fullPath: '/games/$code/play'
      preLoaderRoute: typeof GamesCodePlayRouteImport
      parentRoute: typeof GamesCodeRouteRoute
    }
    '/games/$code/lobby': {
      id: '/games/$code/lobby'
      path: '/lobby'
      fullPath: '/games/$code/lobby'
      preLoaderRoute: typeof GamesCodeLobbyRouteImport
      parentRoute: typeof GamesCodeRouteRoute
    }
    '/admin/_authenticated/questions': {
      id: '/admin/_authenticated/questions'
      path: '/questions'
      fullPath: '/admin/questions'
      preLoaderRoute: typeof AdminAuthenticatedQuestionsRouteImport
      parentRoute: typeof AdminAuthenticatedRoute
    }
    '/admin/_authenticated/game-rooms': {
      id: '/admin/_authenticated/game-rooms'
      path: '/game-rooms'
      fullPath: '/admin/game-rooms'
      preLoaderRoute: typeof AdminAuthenticatedGameRoomsRouteImport
      parentRoute: typeof AdminAuthenticatedRoute
    }
    '/admin/_authenticated/feedback': {
      id: '/admin/_authenticated/feedback'
      path: '/feedback'
      fullPath: '/admin/feedback'
      preLoaderRoute: typeof AdminAuthenticatedFeedbackRouteImport
      parentRoute: typeof AdminAuthenticatedRoute
    }
    '/admin/_authenticated/dashboard': {
      id: '/admin/_authenticated/dashboard'
      path: '/dashboard'
      fullPath: '/admin/dashboard'
      preLoaderRoute: typeof AdminAuthenticatedDashboardRouteImport
      parentRoute: typeof AdminAuthenticatedRoute
    }
  }
}

interface GamesCodeRouteRouteChildren {
  GamesCodeLobbyRoute: typeof GamesCodeLobbyRoute
  GamesCodePlayRoute: typeof GamesCodePlayRoute
  GamesCodeSummaryRoute: typeof GamesCodeSummaryRoute
}

const GamesCodeRouteRouteChildren: GamesCodeRouteRouteChildren = {
  GamesCodeLobbyRoute: GamesCodeLobbyRoute,
  GamesCodePlayRoute: GamesCodePlayRoute,
  GamesCodeSummaryRoute: GamesCodeSummaryRoute,
}

const GamesCodeRouteRouteWithChildren = GamesCodeRouteRoute._addFileChildren(
  GamesCodeRouteRouteChildren,
)

interface AdminAuthenticatedRouteChildren {
  AdminAuthenticatedDashboardRoute: typeof AdminAuthenticatedDashboardRoute
  AdminAuthenticatedFeedbackRoute: typeof AdminAuthenticatedFeedbackRoute
  AdminAuthenticatedGameRoomsRoute: typeof AdminAuthenticatedGameRoomsRoute
  AdminAuthenticatedQuestionsRoute: typeof AdminAuthenticatedQuestionsRoute
}

const AdminAuthenticatedRouteChildren: AdminAuthenticatedRouteChildren = {
  AdminAuthenticatedDashboardRoute: AdminAuthenticatedDashboardRoute,
  AdminAuthenticatedFeedbackRoute: AdminAuthenticatedFeedbackRoute,
  AdminAuthenticatedGameRoomsRoute: AdminAuthenticatedGameRoomsRoute,
  AdminAuthenticatedQuestionsRoute: AdminAuthenticatedQuestionsRoute,
}

const AdminAuthenticatedRouteWithChildren =
  AdminAuthenticatedRoute._addFileChildren(AdminAuthenticatedRouteChildren)

interface AdminRouteChildren {
  AdminAuthenticatedRoute: typeof AdminAuthenticatedRouteWithChildren
  AdminLoginRoute: typeof AdminLoginRoute
}

const AdminRouteChildren: AdminRouteChildren = {
  AdminAuthenticatedRoute: AdminAuthenticatedRouteWithChildren,
  AdminLoginRoute: AdminLoginRoute,
}

const AdminRouteWithChildren = AdminRoute._addFileChildren(AdminRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CreateRoute: CreateRoute,
  JoinRoute: JoinRoute,
  GamesCodeRouteRoute: GamesCodeRouteRouteWithChildren,
  AdminRoute: AdminRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
